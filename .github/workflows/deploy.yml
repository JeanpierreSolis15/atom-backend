name: Deploy to Firebase Cloud Functions

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    types: [opened, synchronize, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Install dependencies
      run: pnpm install
      
    - name: Run linting
      run: pnpm run lint
      
    - name: Run tests
      run: pnpm run test:cov
      
    - name: Build application
      run: pnpm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Install dependencies
      run: pnpm install
      
    - name: Build application for Firebase Functions
      run: |
        pnpm run build
        cp -r dist/* .
        cp package.json .
      
    - name: Debug - List files before deployment
      run: |
        echo "=== Files in root directory ==="
        ls -la
        echo "=== Files in dist directory ==="
        ls -la dist/
        echo "=== App module exists ==="
        ls -la app.module.*
      
    - name: Setup environment variables
      run: |
        echo "PROJECT_ID=atom-cddbd" >> .env
        echo "NODE_ENV=production" >> .env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
        echo "JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }}" >> .env
        echo "JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }}" >> .env
        echo "JWT_REFRESH_EXPIRES_IN=${{ secrets.JWT_REFRESH_EXPIRES_IN }}" >> .env
      
    - name: Install Firebase CLI
      run: pnpm add -g firebase-tools
      
    - name: Deploy Cloud Functions
      run: |
        firebase deploy --only functions --token "${{ secrets.FIREBASE_TOKEN }}"
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        PROJECT_ID: atom-cddbd
        NODE_ENV: production 